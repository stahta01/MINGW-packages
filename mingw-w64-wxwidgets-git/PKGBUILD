####
#
# Based on packages found at these URLs
#     https://archlinux.org/packages/extra/x86_64/wxgtk-common/
#     https://github.com/msys2/MINGW-packages/tree/master/mingw-w64-wxWidgets
#
# Maintainer: Tim Stahlhut <stahta01@gmail.com>
#
####

_basename=wxWidgets
_sourcedir=${_basename}-git
_wx_basever=3.3
_namesuffix="-git"
pkgbase=mingw-w64-${_basename}${_namesuffix}
_build_gtk3=yes           # Set to no for faster build
_build_qt=yes             # Set to no for faster build
pkgname=(
  ${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common${_namesuffix}
  ${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common-libs${_namesuffix}
  ${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw-cb_headers${_namesuffix}
  ${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw-libs${_namesuffix}
  ${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw${_namesuffix}
  $([[ "$_build_gtk3" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-gtk3-libs${_namesuffix}")
  $([[ "$_build_gtk3" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-gtk3${_namesuffix}")
  $([[ "$_build_qt" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-qt-libs${_namesuffix}")
  $([[ "$_build_qt" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-qt${_namesuffix}")
)
pkgver=3.3.2.0.v+269.c2.gf25aec1b38b
pkgrel=1
pkgdesc="A C++ library that lets developers create applications for Windows, Linux and UNIX (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64')
license=("custom:wxWindows")
url="https://www.wxwidgets.org/"
makedepends=(
  'diffutils'
  'git'
  'make'
  "${MINGW_PACKAGE_PREFIX}-cc"
  $([[ "$_build_gtk3" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-libsecret")
  $([[ "$_build_gtk3" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-libnotify")
  $([[ "$_build_gtk3" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-gtk3")
  $([[ "$_build_gtk3" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-gspell")
  $([[ "$_build_gtk3" == "yes" || "$_build_qt" == "yes" ]] && echo "${MINGW_PACKAGE_PREFIX}-pkgconf")
  $([[ "$_build_qt"   == "yes" && "$MSYSTEM_CARCH" != "i686" ]] && echo "${MINGW_PACKAGE_PREFIX}-qt5-base")
  "${MINGW_PACKAGE_PREFIX}-libpng"
  "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
  "${MINGW_PACKAGE_PREFIX}-libtiff"
)
checkdepends=()
#options=('strip' 'staticlibs' 'buildflags' '!debug')
options=('!strip' 'staticlibs' 'buildflags' '!debug')
#options=('!strip' 'staticlibs' 'buildflags' 'debug')
source=(
  #${_sourcedir}::"git+https://github.com/wxWidgets/wxWidgets.git#commit=b6e88ef422e333e32a52e08d2b159bb51035989d" # Still had image load bug
  ${_sourcedir}::"git+https://github.com/wxWidgets/wxWidgets.git#branch=master"

  001-wxWidgets-3.0.2-relocate-prefix-in-bin-wx-config.patch

  # Patch rejected by wxWidgets team
  005-wxWidgets-3.1.3-Remove-WX_LIBS_STATIC-from-m4.patch

  201-Fix-warning-in-trackball-sample.patch
)
sha256sums=('SKIP'
            '2b3b183a6a76ad539abc49a41033aa923c13b395c0e55189ba962068781c7135'
            '4a4828f0c9cdc638cffde6a30b5dfb14283719acc9e89e19de8ec2d5a80a5aec'
            'e322bd18d8fd254e090816ceab0bd53d05660ab57684400e9ae32d6fc8835693')

# Declare global variables; begin with underscore to avoid name conflicts
_git_base_commit=
_build_suffix=${MSYSTEM}

pkgver() {
  cd ${srcdir}/${_sourcedir}
  local _major=$(head -n 34 include/wx/version.h | grep 'wxMAJOR_VERSION' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _minor1=$(head -n 34 include/wx/version.h | grep 'wxMINOR_VERSION' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _minor2=$(head -n 34 include/wx/version.h | grep 'wxRELEASE_NUMBER' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _minor3=$(head -n 34 include/wx/version.h | grep 'wxSUBRELEASE_NUMBER' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  printf "%s.%s.%s.%s.v+%s.c%s.g%s" "$_major" "$_minor1" "$_minor2" "$_minor3" $(git rev-list --count $(git rev-list -1 ${_git_base_commit} include/wx/version.h)..${_git_base_commit}) $(git rev-list --count ${_git_base_commit}..HEAD) $(git rev-parse --short=11 ${_git_base_commit})
}

prepare() {
  cd "${srcdir}/${_sourcedir}"

  git submodule init
  git submodule update

  _git_base_commit=$(git rev-parse HEAD)
  GIT_AM="git am --committer-date-is-author-date"

  git config --local user.name  "nobody"
  git config --local user.email "nobody@example.com"

  # Fix Run-Time wx-config bug: MSys2 Mingw only patch; Do not try to submit upstream
  patch -p1 -i "${srcdir}"/001-wxWidgets-3.0.2-relocate-prefix-in-bin-wx-config.patch

  #git am --abort || true

  # MSys2 fails to set WX_LIBS_STATIC correctly; removed to see if something breaks.
  ${GIT_AM} ${srcdir}/005-wxWidgets-3.1.3-Remove-WX_LIBS_STATIC-from-m4.patch

  ${GIT_AM} ${srcdir}/201-Fix-warning-in-trackball-sample.patch
}

build() {
  ####
  # Configure options added to support other software:
  #   --enable-graphics_ctx     codelite
  #   --enable-graphics-d2d     codeblocks
  #
  # Configure options added to check for build issues hidden by PCH
  #   --disable-precomp-headers
  #
  # Configure options added to reduce warnings under wxGTK/Win:
  #   --without-xtest
  #   --disable-mediactrl
  #   --disable-webview
  #   --without-gtkprint
  #
  # Configure options added to avoid errors under wxQT/Win:
  #   --disable-wxdib           # dnd sample build error
  #                             #   and other run-time errors
  #
  # Configure options added to avoid warnings:
  #   --with-regex=builtin
  #
  # Configure options known to cause build errors:
  #   --disable-regkey                                compile error
  #
  # Configure options known to cause build errors under wxGTK/Win:
  #   --with-opengl                                   configure error
  #   --enable-accessibility                          compile error
  #     "wxUSE_ACCESSIBILITY is currently only supported under wxMSW"
  #
  ####

  case ${MINGW_CHOST} in
    i686*)
      _march=i686
    ;;
    x86_64*)
      _march=x86-64
    ;;
  esac

  if check_option "buildflags" "y"; then
    # Remove the -O and -ggdb options to avoid configuration warnings
    # from the normal settings found in /etc/makepkg_mingw??.conf

    CXXFLAGS=${CXXFLAGS/-Og }
    CXXFLAGS=${CXXFLAGS/-O2 }
    CXXFLAGS=${CXXFLAGS/-ggdb }

    CFLAGS=${CFLAGS/-Og }
    CFLAGS=${CFLAGS/-O2 }
    CFLAGS=${CFLAGS/-ggdb }
  fi

  #CPPFLAGS+=" -D__MINGW64_TOOLCHAIN__"

  local -a _debug_options=()

  if check_option "debug" "y"; then
    _debug_options+=("--enable-debug_gdb")
    _debug_options+=("--enable-debug_info")
    _debug_options+=("--enable-debug=max")
    #_debug_options+=("--enable-debug=yes")
  else
    _debug_options+=("--enable-optimise")
    _debug_options+=("--enable-debug=no")
  fi

  echo "CPPFLAGS := ${CPPFLAGS}"
  echo "CFLAGS := ${CFLAGS}"
  echo "CXXFLAGS := ${CXXFLAGS}"
  echo "_debug_options := ${_debug_options[@]}"

if [[ "$_build_qt" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] ; then
  [[ -d "${srcdir}"/build-qt-${_build_suffix}-static ]] && rm -rf "${srcdir}"/build-qt-${_build_suffix}-static
  mkdir -p "${srcdir}"/build-qt-${_build_suffix}-static && cd "${srcdir}"/build-qt-${_build_suffix}-static

  CFLAGS="$CFLAGS" \
  CXXFLAGS="$CXXFLAGS" \
  ../${_sourcedir}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --with-qt \
    --disable-wxdib \
    --with-libpng=builtin \
    --with-libjpeg=builtin \
    --with-libtiff=builtin \
    --with-zlib=builtin \
    --with-expat=builtin \
    --with-regex=builtin \
    --without-xtest \
    --disable-shared \
    --disable-precomp-headers \
    --enable-textfile \
    --enable-iff \
    --disable-permissive \
    --enable-graphics_ctx \
    --enable-graphics-d2d \
    --enable-regkey \
    --disable-mediactrl \
    "${_debug_options[@]}" \
    --without-opengl

  make # -j1 VERBOSE=1

  [[ -d "${srcdir}"/install-qt-${_build_suffix}-static ]] && rm -rf "${srcdir}"/install-qt-${_build_suffix}-static
  make -j1 DESTDIR="${srcdir}"/install-qt-${_build_suffix}-static install

  [[ -d "${srcdir}"/build-qt-${_build_suffix} ]] && rm -rf "${srcdir}"/build-qt-${_build_suffix}
  mkdir -p "${srcdir}"/build-qt-${_build_suffix} && cd "${srcdir}"/build-qt-${_build_suffix}

  CFLAGS="$CFLAGS" \
  CXXFLAGS="$CXXFLAGS" \
  ../${_sourcedir}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --with-qt \
    --disable-wxdib \
    --with-regex=builtin \
    --with-libpng=sys \
    --with-libjpeg=sys \
    --with-libtiff=sys \
    --without-xtest \
    --enable-shared \
    --enable-textfile \
    --enable-iff \
    --disable-permissive \
    --enable-graphics_ctx \
    --enable-graphics-d2d \
    --enable-regkey \
    --disable-mediactrl \
    "${_debug_options[@]}" \
    --without-opengl

  make # -j1 VERBOSE=1

  [[ -d "${srcdir}"/install-qt-${_build_suffix}-shared ]] && rm -rf "${srcdir}"/install-qt-${_build_suffix}-shared
  mkdir -p "${srcdir}"/install-qt-${_build_suffix}-shared${MINGW_PREFIX}/bin
  make -j1 DESTDIR="${srcdir}"/install-qt-${_build_suffix}-shared install
fi

if [[ "$_build_gtk3" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] ; then
  [[ -d "${srcdir}"/build-gtk3-${_build_suffix}-static ]] && rm -rf "${srcdir}"/build-gtk3-${_build_suffix}-static
  mkdir -p "${srcdir}"/build-gtk3-${_build_suffix}-static && cd "${srcdir}"/build-gtk3-${_build_suffix}-static

  CFLAGS="$CFLAGS" \
  CXXFLAGS="$CXXFLAGS" \
  ../${_sourcedir}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --with-gtk=3 \
    --with-libpng=builtin \
    --with-libjpeg=builtin \
    --with-libtiff=builtin \
    --with-zlib=builtin \
    --with-expat=builtin \
    --with-regex=builtin \
    --without-xtest \
    --disable-shared \
    --disable-precomp-headers \
    --enable-textfile \
    --enable-iff \
    --disable-permissive \
    --enable-graphics_ctx \
    --enable-graphics-d2d \
    --enable-regkey \
    --disable-mediactrl \
    --disable-webview \
    --without-gtkprint \
    "${_debug_options[@]}" \
    --without-opengl

  make # -j1 VERBOSE=1

  [[ -d "${srcdir}"/install-gtk3-${_build_suffix}-static ]] && rm -rf "${srcdir}"/install-gtk3-${_build_suffix}-static
  make -j1 DESTDIR="${srcdir}"/install-gtk3-${_build_suffix}-static install

  [[ -d "${srcdir}"/build-gtk3-${_build_suffix} ]] && rm -rf "${srcdir}"/build-gtk3-${_build_suffix}
  mkdir -p "${srcdir}"/build-gtk3-${_build_suffix} && cd "${srcdir}"/build-gtk3-${_build_suffix}

  CFLAGS="$CFLAGS" \
  CXXFLAGS="$CXXFLAGS" \
  ../${_sourcedir}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --with-gtk=3 \
    --with-regex=builtin \
    --with-libpng=sys \
    --with-libjpeg=sys \
    --with-libtiff=sys \
    --without-xtest \
    --enable-shared \
    --enable-textfile \
    --enable-iff \
    --disable-permissive \
    --enable-graphics_ctx \
    --enable-graphics-d2d \
    --enable-regkey \
    --disable-mediactrl \
    --disable-webview \
    --without-gtkprint \
    "${_debug_options[@]}" \
    --without-opengl

  make # -j1 VERBOSE=1

  [[ -d "${srcdir}"/install-gtk3-${_build_suffix}-shared ]] && rm -rf "${srcdir}"/install-gtk3-${_build_suffix}-shared
  mkdir -p "${srcdir}"/install-gtk3-${_build_suffix}-shared${MINGW_PREFIX}/bin
  make -j1 DESTDIR="${srcdir}"/install-gtk3-${_build_suffix}-shared install
fi

#if [[ "$_build_msw" == "yes" ]] ; then
  [[ -d "${srcdir}"/build-msw-${_build_suffix}-static ]] && rm -rf "${srcdir}"/build-msw-${_build_suffix}-static
  mkdir -p "${srcdir}"/build-msw-${_build_suffix}-static && cd "${srcdir}"/build-msw-${_build_suffix}-static

  CFLAGS="$CFLAGS" \
  CXXFLAGS="$CXXFLAGS" \
  ../${_sourcedir}/configure \
      --prefix=${MINGW_PREFIX} \
      --host=${MINGW_CHOST} \
      --target=${MINGW_CHOST} \
      --build=${MINGW_CHOST} \
      --with-msw \
      --with-libpng=builtin \
      --with-libjpeg=builtin \
      --with-libtiff=builtin \
      --with-zlib=builtin \
      --with-expat=builtin \
      --with-regex=builtin \
      --disable-shared \
      --disable-precomp-headers \
      --enable-iff \
      --disable-permissive \
      --enable-graphics_ctx \
      --enable-graphics-d2d \
      --enable-accessibility \
      "${_debug_options[@]}" \
      --with-opengl

  make # -j1 VERBOSE=1

  [[ -d "${srcdir}"/install-msw-${_build_suffix}-static ]] && rm -rf "${srcdir}"/install-msw-${_build_suffix}-static
  make -j1 DESTDIR="${srcdir}"/install-msw-${_build_suffix}-static install

  [[ -d "${srcdir}"/build-msw-${_build_suffix} ]] && rm -rf "${srcdir}"/build-msw-${_build_suffix}
  mkdir -p "${srcdir}"/build-msw-${_build_suffix} && cd "${srcdir}"/build-msw-${_build_suffix}

  CFLAGS="$CFLAGS" \
  CXXFLAGS="$CXXFLAGS" \
  ../${_sourcedir}/configure \
      --prefix=${MINGW_PREFIX} \
      --host=${MINGW_CHOST} \
      --target=${MINGW_CHOST} \
      --build=${MINGW_CHOST} \
      --with-msw \
      --with-regex=builtin \
      --with-libpng=sys \
      --with-libjpeg=sys \
      --with-libtiff=sys \
      --enable-shared \
      --enable-iff \
      --disable-permissive \
      --enable-graphics_ctx \
      --enable-graphics-d2d \
      --enable-accessibility \
      "${_debug_options[@]}" \
      --with-opengl

  make # -j1 VERBOSE=1

  [[ -d "${srcdir}"/install-msw-${_build_suffix}-shared ]] && rm -rf "${srcdir}"/install-msw-${_build_suffix}-shared
  mkdir -p "${srcdir}"/install-msw-${_build_suffix}-shared${MINGW_PREFIX}/bin
  make -j1 DESTDIR="${srcdir}"/install-msw-${_build_suffix}-shared install
#fi

}

check() {
    #if [[ "$_build_msw" == "yes" ]] ; then
      cd "${srcdir}"/build-msw-${_build_suffix}-static/samples          && make -k --jobs=1 || true
      cd "${srcdir}"/build-msw-${_build_suffix}-static/tests            && make -k --jobs=1 || true
      rm -rf "${srcdir}"/build-msw-${_build_suffix}-static
      cd "${srcdir}"/build-msw-${_build_suffix}/demos                   && make -k --jobs=1 # || true
      cd "${srcdir}"/build-msw-${_build_suffix}/samples                 && make -k --jobs=1 # || true
      cd "${srcdir}"/build-msw-${_build_suffix}/tests                   && make -k --jobs=1 || true
      rm -rf "${srcdir}"/build-msw-${_build_suffix}
    #fi
    if [[ "$_build_gtk3" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] ; then
      cd "${srcdir}"/build-gtk3-${_build_suffix}/demos    && make -k --jobs=1 || true
      cd "${srcdir}"/build-gtk3-${_build_suffix}/samples  && make -k --jobs=1 || true
      cd "${srcdir}"/build-gtk3-${_build_suffix}/tests    && make -k --jobs=1 || true
      rm -rf "${srcdir}"/build-gtk3-${_build_suffix}
    fi
    if [[ "$_build_qt" == "yes" && "$MSYSTEM_CARCH" != "i686" ]] ; then
      cd "${srcdir}"/build-qt-${_build_suffix}/demos                    && make -k --jobs=1 || true
      cd "${srcdir}"/build-qt-${_build_suffix}/samples                  && make -k --jobs=1 || true
      cd "${srcdir}"/build-qt-${_build_suffix}/tests                    && make -k --jobs=1 || true
      rm -rf "${srcdir}"/build-qt-${_build_suffix}
    fi
}

package_wxwidgets3.3-qt-git() {
  pkgdesc="Qt 5.x implementation of wxWidgets API for GUI (mingw-w64)"
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-qt" "${MINGW_PACKAGE_PREFIX}-wxwidgets-qt")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-qt" "${MINGW_PACKAGE_PREFIX}-wxwidgets-qt")
  depends=(
    "${MINGW_PACKAGE_PREFIX}-qt5-base"
    "${MINGW_PACKAGE_PREFIX}-gcc-libs"
    "${MINGW_PACKAGE_PREFIX}-expat"
    "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
    "${MINGW_PACKAGE_PREFIX}-libpng"
    "${MINGW_PACKAGE_PREFIX}-libtiff"
    "${MINGW_PACKAGE_PREFIX}-xz"
    "${MINGW_PACKAGE_PREFIX}-zlib"
  )
  local MINGW_PREFIX_WIN=$(cygpath -am ${MINGW_PREFIX})

  cp --recursive "${srcdir}"/install-qt-${_build_suffix}-static${MINGW_PREFIX}/ ${pkgdir}/
  cp --recursive "${srcdir}"/install-qt-${_build_suffix}-shared${MINGW_PREFIX}/ ${pkgdir}/

  # Remove include folder
  rm -fr ${pkgdir}${MINGW_PREFIX}/include

  sed -s "s|-L${MINGW_PREFIX_WIN}/lib||g" -i "${pkgdir}"${MINGW_PREFIX}/lib/wx/config/qt-unicode-${_wx_basever}
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib||g" -i "${pkgdir}"${MINGW_PREFIX}/lib/wx/config/qt-unicode-static-${_wx_basever}

  # Rename files
  mv ${pkgdir}${MINGW_PREFIX}/share/aclocal/wxwin.m4 ${pkgdir}${MINGW_PREFIX}/share/aclocal/wxwin${_wx_basever}.m4

  # Remove conflicting files; that do not need to be renamed
  rm -f ${pkgdir}${MINGW_PREFIX}/bin/wxrc.exe

  # Remove conflicting files; that I have no idea how to rename
  rm -fr ${pkgdir}${MINGW_PREFIX}/share/bakefile
  rm -fr ${pkgdir}${MINGW_PREFIX}/share/locale

  cp "${pkgdir}${MINGW_PREFIX}/bin/wx-config" "${pkgdir}${MINGW_PREFIX}/bin/wx-config-${_wx_basever}"
  # Replace real full path with psuedo full path
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config-${_wx_basever}"
  mv "$pkgdir"${MINGW_PREFIX}/bin/wx-config{,-qt} # Conflicts with msw
  rm ${pkgdir}${MINGW_PREFIX}/bin/wx-config-${_wx_basever}

  rm    "$pkgdir"${MINGW_PREFIX}/bin/*.dll  # in common-libs and qt libs packages
  rm    "$pkgdir"${MINGW_PREFIX}/lib/libwx[a-z]*-3.3.a # in common-libs
  rm    "$pkgdir"${MINGW_PREFIX}/lib/libwx_base*.a     # in common-libs
  rm    "${pkgdir}"${MINGW_PREFIX}/bin/wxrc-${_wx_basever}.exe

  # License files
  cd "${srcdir}"/${_sourcedir}/docs
  install -Dm644 preamble.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/${_basename}${_wx_basever}/preamble.txt"
  install -Dm644 licence.txt  "${pkgdir}${MINGW_PREFIX}/share/licenses/${_basename}${_wx_basever}/licence.txt"
  install -Dm644 licendoc.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/${_basename}${_wx_basever}/licendoc.txt"
  install -Dm644 lgpl.txt     "${pkgdir}${MINGW_PREFIX}/share/licenses/${_basename}${_wx_basever}/lgpl.txt"
  install -Dm644 gpl.txt      "${pkgdir}${MINGW_PREFIX}/share/licenses/${_basename}${_wx_basever}/gpl.txt"
  install -Dm644 xserver.txt  "${pkgdir}${MINGW_PREFIX}/share/licenses/${_basename}${_wx_basever}/xserver.txt"
}

package_wxwidgets3.3-qt-libs-git() {
  pkgdesc="Qt implementated shared libraries for wxwidgets ${_wx_basever} (mingw-w64)"
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-qt-libs")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-qt-libs")
  depends=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common-libs"
           "${MINGW_PACKAGE_PREFIX}-qt5-base")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  cp -a ${srcdir}/install-qt-${MSYSTEM}-shared${MINGW_PREFIX}/bin/*.dll ${pkgdir}${MINGW_PREFIX}/bin/

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxbase*.dll  # in common-libs package
}

package_wxwidgets3.3-common-libs-git() {
  pkgdesc="wxBase shared libraries for wxwidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-expat"
           "${MINGW_PACKAGE_PREFIX}-pcre2"
           "${MINGW_PACKAGE_PREFIX}-libsecret")
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common-libs")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common-libs")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  cp -a ${srcdir}/install-msw-${MSYSTEM}-shared${MINGW_PREFIX}/bin/*.dll ${pkgdir}${MINGW_PREFIX}/bin/

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxmsw*.dll   # in msw libs package

  # License files
  cd "${srcdir}"/${_sourcedir}/docs
  install -Dm644 preamble.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/preamble.txt"
  install -Dm644 licence.txt  "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/licence.txt"
  install -Dm644 licendoc.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/licendoc.txt"
  install -Dm644 lgpl.txt     "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/lgpl.txt"
  install -Dm644 gpl.txt      "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/gpl.txt"
  install -Dm644 xserver.txt  "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/xserver.txt"
}

package_wxwidgets3.3-msw-git() {
  pkgdesc="A C++ library that lets developers create applications for Windows, Linux and UNIX (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw-libs"
           "${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common")
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw" "${MINGW_PACKAGE_PREFIX}-wxwidgets-msw" "${MINGW_PACKAGE_PREFIX}-wxmsw${_wx_basever}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw" "${MINGW_PACKAGE_PREFIX}-wxwidgets-msw")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/lib
  cp -a --recursive "${srcdir}/install-msw-${MSYSTEM}-static${MINGW_PREFIX}/lib/wx/" \
      ${pkgdir}${MINGW_PREFIX}/lib

  cp -a --recursive "${srcdir}/install-msw-${MSYSTEM}-shared${MINGW_PREFIX}/lib/wx/" \
      ${pkgdir}${MINGW_PREFIX}/lib

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  cp -a ${srcdir}/install-msw-${MSYSTEM}-static${MINGW_PREFIX}/bin/wx-config* ${pkgdir}${MINGW_PREFIX}/bin/
  mv ${pkgdir}${MINGW_PREFIX}/bin/wx-config{,-static}
  cp -a ${srcdir}/install-msw-${MSYSTEM}-shared${MINGW_PREFIX}/bin/wx-config* ${pkgdir}${MINGW_PREFIX}/bin/


  # Replace real full path with psuedo full path; to prevent
  # WARNING: Package contains reference to $(cygpath -m /)
  local MINGW_PREFIX_WIN=$(cygpath -am ${MINGW_PREFIX})
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config-static"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/lib/wx/config/msw-unicode-${_wx_basever}"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/lib/wx/config/msw-unicode-static-${_wx_basever}"

  # create wx-config copy with version file suffix
  cp -a ${pkgdir}${MINGW_PREFIX}/bin/wx-config{,-${_wx_basever}}
}

package_wxwidgets3.3-msw-libs-git() {
  pkgdesc="wxMSW shared libraries for wxwidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common-libs"
           "${MINGW_PACKAGE_PREFIX}-libpng"
           "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
           "${MINGW_PACKAGE_PREFIX}-libtiff")
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw-libs")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw-libs")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  cp -a ${srcdir}/install-msw-${MSYSTEM}-shared${MINGW_PREFIX}/bin/*.dll ${pkgdir}${MINGW_PREFIX}/bin/

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxbase*.dll  # in common-libs package
}

package_wxwidgets3.3-gtk3-git() {
  pkgdesc="GTK+3 implementation of wxWidgets ${_wx_basever} C++ GUI API (mingw-w64)"
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-gtk3" "${MINGW_PACKAGE_PREFIX}-wxwidgets-gtk3")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-gtk3" "${MINGW_PACKAGE_PREFIX}-wxwidgets-gtk3")

  depends=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-gtk3-libs"
           "${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/lib
  cp -a --recursive "${srcdir}/install-gtk3-${MSYSTEM}-static${MINGW_PREFIX}/lib/wx/" \
      ${pkgdir}${MINGW_PREFIX}/lib

  cp -a --recursive "${srcdir}/install-gtk3-${MSYSTEM}-shared${MINGW_PREFIX}/lib/wx/" \
      ${pkgdir}${MINGW_PREFIX}/lib

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  cp -a ${srcdir}/install-gtk3-${MSYSTEM}-static${MINGW_PREFIX}/bin/wx-config* ${pkgdir}${MINGW_PREFIX}/bin/
  cp -a ${srcdir}/install-gtk3-${MSYSTEM}-shared${MINGW_PREFIX}/bin/wx-config* ${pkgdir}${MINGW_PREFIX}/bin/

  mv "$pkgdir"${MINGW_PREFIX}/bin/wx-config{,-gtk3} # Conflicts with msw

  # Replace real full path with psuedo full path; to prevent
  # WARNING: Package contains reference to $(cygpath -m /)
  local MINGW_PREFIX_WIN=$(cygpath -am ${MINGW_PREFIX})
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config-gtk3"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/lib/wx/config/gtk3-unicode-${_wx_basever}"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/lib/wx/config/gtk3-unicode-static-${_wx_basever}"

  # create wx-config-gtk3 copy with version file suffix
  cp -a ${pkgdir}${MINGW_PREFIX}/bin/wx-config-gtk3{,-${_wx_basever}}
}

package_wxwidgets3.3-gtk3-libs-git() {
  pkgdesc="GTK+3 implementated shared libraries for wxwidgets ${_wx_basever} (mingw-w64)"
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-gtk3-libs")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-gtk3-libs")
  depends=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common-libs"
           "${MINGW_PACKAGE_PREFIX}-gtk3"
           "${MINGW_PACKAGE_PREFIX}-libnotify")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  cp -a ${srcdir}/install-gtk3-${MSYSTEM}-shared${MINGW_PREFIX}/bin/*.dll ${pkgdir}${MINGW_PREFIX}/bin/

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxbase*.dll  # in common-libs package
}

package_wxwidgets3.3-common-git() {
  pkgdesc="Static libraries and headers for wxWidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common-libs")
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets-common" "${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets-common" "${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/share
  cp -a --recursive "${srcdir}/install-msw-${MSYSTEM}-shared${MINGW_PREFIX}/share/" \
      ${pkgdir}${MINGW_PREFIX}/

  #mkdir -p ${pkgdir}${MINGW_PREFIX}/include
  #cp -a --recursive "${srcdir}/install-gtk3-${MSYSTEM}-shared${MINGW_PREFIX}/include/" \
      #${pkgdir}${MINGW_PREFIX}/

  mkdir -p ${pkgdir}${MINGW_PREFIX}/include
  cp -a --recursive "${srcdir}/install-msw-${MSYSTEM}-shared${MINGW_PREFIX}/include/" \
      ${pkgdir}${MINGW_PREFIX}/

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  cp -a ${srcdir}/install-msw-${MSYSTEM}-shared${MINGW_PREFIX}/bin/wxrc*.* ${pkgdir}${MINGW_PREFIX}/bin/

  mkdir -p ${pkgdir}${MINGW_PREFIX}/lib
  #cp -a ${srcdir}/install-gtk3-${MSYSTEM}-static${MINGW_PREFIX}/lib/*.a ${pkgdir}${MINGW_PREFIX}/lib/
  #cp -a ${srcdir}/install-gtk3-${MSYSTEM}-shared${MINGW_PREFIX}/lib/*.a ${pkgdir}${MINGW_PREFIX}/lib/
  cp -a ${srcdir}/install-msw-${MSYSTEM}-static${MINGW_PREFIX}/lib/*.a  ${pkgdir}${MINGW_PREFIX}/lib/
  cp -a ${srcdir}/install-msw-${MSYSTEM}-shared${MINGW_PREFIX}/lib/*.a  ${pkgdir}${MINGW_PREFIX}/lib/
}

package_wxwidgets3.3-msw-cb_headers-git() {
  pkgdesc="private wxWidgets ${_wx_basever} MSW headers needed by Code::Blocks (mingw-w64)"
  optdepends=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-common")
  provides=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw-cb_headers"
            "${MINGW_PACKAGE_PREFIX}-wxwidgets-msw-cb_headers")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxwidgets${_wx_basever}-msw-cb_headers"
             "${MINGW_PACKAGE_PREFIX}-wxwidgets-msw-cb_headers")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/include/wx-${_wx_basever}/wx/msw/private
  cd ${pkgdir}${MINGW_PREFIX}/include/wx-${_wx_basever}/wx/msw/private
  cp ${srcdir}/${_sourcedir}/include/wx/msw/private/comptr.h ./
  cp ${srcdir}/${_sourcedir}/include/wx/msw/private/graphicsd2d.h ./
  cp ${srcdir}/${_sourcedir}/include/wx/msw/private/keyboard.h ./
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
